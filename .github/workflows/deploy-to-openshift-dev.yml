name: OpenShiftDeploymentDev

env:
  OPENSHIFT_SERVER: ${{ secrets.OPENSHIFT_SERVER }}
  OPENSHIFT_TOKEN: ${{ secrets.OPENSHIFT_TOKEN }}
  # üñäÔ∏è EDIT to set the kube context's namespace after login. Leave blank to use your user's default namespace.
  OPENSHIFT_NAMESPACE: ${{ secrets.OPENSHIFT_PROJECT }}
  # üñäÔ∏è EDIT to set a name for your OpenShift app, or a default one will be generated below.
  APP_NAME: "kanbanbackend-dev"
  APP_PORT: ${{ secrets.PORT_DEV }}
  
on:
  workflow_run:
    workflows: ["Publish to Quay.io Developer Build"]
    types:
      - completed
jobs:   
  openshift-deploy:
      name: Deploy to OpenShift
      # ubuntu-20.04 can also be used.
      runs-on: ubuntu-18.04

      outputs:
        ROUTE: ${{ steps.deploy-and-expose.outputs.route }}
        SELECTOR: ${{ steps.deploy-and-expose.outputs.selector }}
 
      steps:
      - name: Install oc
        uses: redhat-actions/openshift-tools-installer@v1
        with:
          oc: 4
 
      # https://github.com/redhat-actions/oc-login#readme
      - name: Log in to OpenShift
        uses: redhat-actions/oc-login@v1
        with:
          openshift_server_url: ${{ env.OPENSHIFT_SERVER }}
          openshift_token: ${{ env.OPENSHIFT_TOKEN }}
          insecure_skip_tls_verify: true
          namespace: ${{ env.OPENSHIFT_NAMESPACE }}

      - name: Create and expose app
        id: deploy-and-expose
        uses: redhat-actions/oc-new-app@v1
        with:
          app_name: ${{ env.APP_NAME }}
          image: quay.io/sweng312022/kanban_board_backend_dev
          namespace: ${{ env.OPENSHIFT_NAMESPACE }}
          port: ${{ env.APP_PORT }}

      - name: Set environment
        run: |
          oc set env dc/${{ env.APP_NAME }} MONGODB_URL=${{ secrets.MONGODB_URL_DEV }} PORT=${{ secrets.PORT_DEV }} MONGODB_PORT=${{ secrets.MONGODB_PORT_DEV }}

      - name: Print application URL
        env:
          ROUTE: ${{ steps.deploy-and-expose.outputs.route }}
          SELECTOR: ${{ steps.deploy-and-expose.outputs.selector }}
        run: |
          [[ -n ${{ env.ROUTE }} ]] || (echo "Determining application route failed in previous step"; exit 1)
          echo
          echo "======================== Your application is available at: ========================"
          echo ${{ env.ROUTE }}
          echo "==================================================================================="
          echo
          echo "Your app can be taken down with: \"oc delete all --selector='${{ env.SELECTOR }}'\""
